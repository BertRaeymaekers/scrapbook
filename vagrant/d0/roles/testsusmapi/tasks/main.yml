---
- name: Copy requirements.txt
  become: yes
  become_user: "{{susmapi_user}}"
  copy:
    src: "requirements.txt"
    dest: "~{{susmapi_user}}/requirements.txt"
    owner: "{{susmapi_user}}"
    group: "{{susmapi_group}}"
    mode: u=rwx

# TODO: use pip role.
- name: Install python dependencies
  become: yes
  become_user: "{{susmapi_user}}"
  command: /bin/bash -c "cd; source {{virtualenv_name}}/bin/activate && pip install -r requirements.txt"

- name: Put the  wsgi.py
  become: yes
  become_user: "{{susmapi_user}}"
  template:
    src: "wsgi.py.j2"
    dest: "~{{susmapi_user}}/wsgi.py"
    owner: "{{susmapi_user}}"
    group: "{{susmapi_group}}"
    mode: u=rwx,g=r,o=r

- name: Put the uwsgi ini
  become: yes
  become_user: "{{susmapi_user}}"
  template:
    src: "ini.j2"
    dest: "~{{susmapi_user}}/{{susmapi_name}}.ini"
    owner: "{{susmapi_user}}"
    group: "{{susmapi_group}}"
    mode: u=rw,g=r,o=r

- name: Put the /lib/systemd/system/{{susmapi_name}}.service
  become: yes
  template:
    src: "service.j2"
    dest: "/lib/systemd/system/susmapi.service"
    owner: "{{susmapi_user}}"
    group: "{{susmapi_group}}"
    mode: u=rw,g=r,o=r
# systemctl enable susmapi.service
# systemctl start susmapi

# NOT NEEDE, USING THE SERVICE ABOVE #
#- name: Put the /etc/init/susmapi.conf
#  become: yes
#  template:
#    src: "conf.j2"
#    dest: "/etc/init/{{susmapi_name}}.conf"
#    owner: "{{susmapi_user}}"
#    group: "{{susmapi_group}}"
#   mode: u=rw,g=r,o=r

- name: Configure {{susmapi_name}} in nginx
  become: yes
  template:
    src: "nginx.j2"
    dest: "/etc/nginx/sites-available/{{susmapi_name}}"
    owner: "{{www_data_user}}"
    group: "{{www_data_group}}"
    mode: u=rw,g=r,o=r

- name: Enable {{susmapi_name}} in nginx
  become: yes
  file:
    src: /etc/nginx/sites-available/{{susmapi_name}}
    dest: /etc/nginx/sites-enabled/{{susmapi_name}}
    state: link

# TODO: perhaps handlers?
- name: Restart service api, in all cases
  become: yes
  service:
    name: "{{susmapi_name}}"
    state: restarted

- name: Restart service nginx, in all cases
  become: yes
  service:
    name: nginx
    state: restarted

