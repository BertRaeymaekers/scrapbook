---
- name: Make sure there is a RSA host key for the backup user
  become: yes
  become_user: "{{ sync_user }}"
  command: ssh-keygen -q -t rsa -f ~/.ssh/id_rsa -C "" -N ""
  args:
    creates: ~/.ssh/id_rsa
  delegate_to: "{{ backup_server }}"

- name: Fetch the RSA public key of the backup user
  become: yes
  become_user: "{{ sync_user }}"
  fetch:
    src: ~/.ssh/id_rsa.pub
    dest: "/tmp/{{ backup_server }}.rsync.id_rsa.pub"
    flat: yes
  delegate_to: "{{ backup_server }}"

# /export/bert/sync.sh > /home/rsync/bert_sync.log 2>/dev/null
- name: Schedule the backup from the backup server
  become: yes
  become_user: "{{ sync_user }}"
  cron:
    name: "Sync for user {{ item }}"
    minute: "{{ 0 * 15 | int }}"
    # REQUIRES ANSIBLE 2.8
    # minute: "{{ ansible_loop.index0 * 15 | int }}"
    job: "/export/{{ item }}/sync.sh >> /home/{{ sync_user }}/{{ item }}_sync.log 2>/dev/null"
  loop: "{{ people | list }}"
  # REQUIRES ANSIBLE 2.8
  #loop_control:
  #  extended: yes
  delegate_to: "{{ backup_server }}"
